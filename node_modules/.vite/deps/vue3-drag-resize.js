import {
  require_vue
} from "./chunk-YK36MZVV.js";
import "./chunk-TYUBDKXE.js";
import {
  __commonJS
} from "./chunk-AC2VUBZ6.js";

// node_modules/vue3-drag-resize/dist/index.js
var require_dist = __commonJS({
  "node_modules/vue3-drag-resize/dist/index.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e(require_vue()) : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.Vue3DragResize = e(require_vue()) : t.Vue3DragResize = e(t.Vue);
    }(self, function(t) {
      return (() => {
        "use strict";
        var e = { 705: (t2) => {
          t2.exports = function(t3) {
            var e2 = [];
            return e2.toString = function() {
              return this.map(function(e3) {
                var i2 = t3(e3);
                return e3[2] ? "@media ".concat(e3[2], " {").concat(i2, "}") : i2;
              }).join("");
            }, e2.i = function(t4, i2, n2) {
              "string" == typeof t4 && (t4 = [[null, t4, ""]]);
              var o2 = {};
              if (n2)
                for (var r = 0; r < this.length; r++) {
                  var a = this[r][0];
                  null != a && (o2[a] = true);
                }
              for (var s = 0; s < t4.length; s++) {
                var h = [].concat(t4[s]);
                n2 && o2[h[0]] || (i2 && (h[2] ? h[2] = "".concat(i2, " and ").concat(h[2]) : h[2] = i2), e2.push(h));
              }
            }, e2;
          };
        }, 566: (t2, e2, i2) => {
          i2.d(e2, { Z: () => r });
          var n2 = i2(705), o2 = i2.n(n2)()(function(t3) {
            return t3[1];
          });
          o2.push([t2.id, ".vdr {\n    position: absolute;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n}\n.vdr.active:before{\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    outline: 1px dashed #d6d6d6;\n}\n.vdr-stick {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    position: absolute;\n    font-size: 1px;\n    background: #ffffff;\n    border: 1px solid #6c6c6c;\n    -webkit-box-shadow: 0 0 2px #bbb;\n            box-shadow: 0 0 2px #bbb;\n}\n.inactive .vdr-stick {\n    display: none;\n}\n.vdr-stick-tl, .vdr-stick-br {\n    cursor: nwse-resize;\n}\n.vdr-stick-tm, .vdr-stick-bm {\n    left: 50%;\n    cursor: ns-resize;\n}\n.vdr-stick-tr, .vdr-stick-bl {\n    cursor: nesw-resize;\n}\n.vdr-stick-ml, .vdr-stick-mr {\n    top: 50%;\n    cursor: ew-resize;\n}\n.vdr-stick.not-resizable{\n    display: none;\n}\n.content-container{\n    display: block;\n    position: relative;\n}", ""]);
          const r = o2;
        }, 379: (t2, e2, i2) => {
          var n2, o2 = function() {
            var t3 = {};
            return function(e3) {
              if (void 0 === t3[e3]) {
                var i3 = document.querySelector(e3);
                if (window.HTMLIFrameElement && i3 instanceof window.HTMLIFrameElement)
                  try {
                    i3 = i3.contentDocument.head;
                  } catch (t4) {
                    i3 = null;
                  }
                t3[e3] = i3;
              }
              return t3[e3];
            };
          }(), r = [];
          function a(t3) {
            for (var e3 = -1, i3 = 0; i3 < r.length; i3++)
              if (r[i3].identifier === t3) {
                e3 = i3;
                break;
              }
            return e3;
          }
          function s(t3, e3) {
            for (var i3 = {}, n3 = [], o3 = 0; o3 < t3.length; o3++) {
              var s2 = t3[o3], h2 = e3.base ? s2[0] + e3.base : s2[0], c2 = i3[h2] || 0, l2 = "".concat(h2, " ").concat(c2);
              i3[h2] = c2 + 1;
              var u2 = a(l2), d2 = { css: s2[1], media: s2[2], sourceMap: s2[3] };
              -1 !== u2 ? (r[u2].references++, r[u2].updater(d2)) : r.push({ identifier: l2, updater: m(d2, e3), references: 1 }), n3.push(l2);
            }
            return n3;
          }
          function h(t3) {
            var e3 = document.createElement("style"), n3 = t3.attributes || {};
            if (void 0 === n3.nonce) {
              var r2 = i2.nc;
              r2 && (n3.nonce = r2);
            }
            if (Object.keys(n3).forEach(function(t4) {
              e3.setAttribute(t4, n3[t4]);
            }), "function" == typeof t3.insert)
              t3.insert(e3);
            else {
              var a2 = o2(t3.insert || "head");
              if (!a2)
                throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
              a2.appendChild(e3);
            }
            return e3;
          }
          var c, l = (c = [], function(t3, e3) {
            return c[t3] = e3, c.filter(Boolean).join("\n");
          });
          function u(t3, e3, i3, n3) {
            var o3 = i3 ? "" : n3.media ? "@media ".concat(n3.media, " {").concat(n3.css, "}") : n3.css;
            if (t3.styleSheet)
              t3.styleSheet.cssText = l(e3, o3);
            else {
              var r2 = document.createTextNode(o3), a2 = t3.childNodes;
              a2[e3] && t3.removeChild(a2[e3]), a2.length ? t3.insertBefore(r2, a2[e3]) : t3.appendChild(r2);
            }
          }
          function d(t3, e3, i3) {
            var n3 = i3.css, o3 = i3.media, r2 = i3.sourceMap;
            if (o3 ? t3.setAttribute("media", o3) : t3.removeAttribute("media"), r2 && "undefined" != typeof btoa && (n3 += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r2)))), " */")), t3.styleSheet)
              t3.styleSheet.cssText = n3;
            else {
              for (; t3.firstChild; )
                t3.removeChild(t3.firstChild);
              t3.appendChild(document.createTextNode(n3));
            }
          }
          var p = null, f = 0;
          function m(t3, e3) {
            var i3, n3, o3;
            if (e3.singleton) {
              var r2 = f++;
              i3 = p || (p = h(e3)), n3 = u.bind(null, i3, r2, false), o3 = u.bind(null, i3, r2, true);
            } else
              i3 = h(e3), n3 = d.bind(null, i3, e3), o3 = function() {
                !function(t4) {
                  if (null === t4.parentNode)
                    return false;
                  t4.parentNode.removeChild(t4);
                }(i3);
              };
            return n3(t3), function(e4) {
              if (e4) {
                if (e4.css === t3.css && e4.media === t3.media && e4.sourceMap === t3.sourceMap)
                  return;
                n3(t3 = e4);
              } else
                o3();
            };
          }
          t2.exports = function(t3, e3) {
            (e3 = e3 || {}).singleton || "boolean" == typeof e3.singleton || (e3.singleton = (void 0 === n2 && (n2 = Boolean(window && document && document.all && !window.atob)), n2));
            var i3 = s(t3 = t3 || [], e3);
            return function(t4) {
              if (t4 = t4 || [], "[object Array]" === Object.prototype.toString.call(t4)) {
                for (var n3 = 0; n3 < i3.length; n3++) {
                  var o3 = a(i3[n3]);
                  r[o3].references--;
                }
                for (var h2 = s(t4, e3), c2 = 0; c2 < i3.length; c2++) {
                  var l2 = a(i3[c2]);
                  0 === r[l2].references && (r[l2].updater(), r.splice(l2, 1));
                }
                i3 = h2;
              }
            };
          };
        }, 507: (e2) => {
          e2.exports = t;
        } }, i = {};
        function n(t2) {
          var o2 = i[t2];
          if (void 0 !== o2)
            return o2.exports;
          var r = i[t2] = { id: t2, exports: {} };
          return e[t2](r, r.exports, n), r.exports;
        }
        n.n = (t2) => {
          var e2 = t2 && t2.__esModule ? () => t2.default : () => t2;
          return n.d(e2, { a: e2 }), e2;
        }, n.d = (t2, e2) => {
          for (var i2 in e2)
            n.o(e2, i2) && !n.o(t2, i2) && Object.defineProperty(t2, i2, { enumerable: true, get: e2[i2] });
        }, n.o = (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2), n.r = (t2) => {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
        };
        var o = {};
        return (() => {
          n.r(o), n.d(o, { default: () => u });
          var t2 = n(507);
          function e2(t3) {
            return function(t4) {
              if (Array.isArray(t4))
                return i2(t4);
            }(t3) || function(t4) {
              if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"])
                return Array.from(t4);
            }(t3) || function(t4, e3) {
              if (t4) {
                if ("string" == typeof t4)
                  return i2(t4, e3);
                var n2 = Object.prototype.toString.call(t4).slice(8, -1);
                return "Object" === n2 && t4.constructor && (n2 = t4.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(t4) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? i2(t4, e3) : void 0;
              }
            }(t3) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
          }
          function i2(t3, e3) {
            (null == e3 || e3 > t3.length) && (e3 = t3.length);
            for (var i3 = 0, n2 = new Array(e3); i3 < e3; i3++)
              n2[i3] = t3[i3];
            return n2;
          }
          var r = { t: "top", m: "marginTop", b: "bottom" }, a = { l: "left", m: "marginLeft", r: "right" };
          const s = { name: "vue-drag-resize", emits: ["clicked", "dragging", "dragstop", "resizing", "resizestop", "activated", "deactivated"], props: { stickSize: { type: Number, default: 8 }, parentScaleX: { type: Number, default: 1 }, parentScaleY: { type: Number, default: 1 }, isActive: { type: Boolean, default: false }, preventActiveBehavior: { type: Boolean, default: false }, isDraggable: { type: Boolean, default: true }, isResizable: { type: Boolean, default: true }, aspectRatio: { type: Boolean, default: false }, parentLimitation: { type: Boolean, default: false }, snapToGrid: { type: Boolean, default: false }, gridX: { type: Number, default: 50, validator: function(t3) {
            return t3 >= 0;
          } }, gridY: { type: Number, default: 50, validator: function(t3) {
            return t3 >= 0;
          } }, parentW: { type: Number, default: 0, validator: function(t3) {
            return t3 >= 0;
          } }, parentH: { type: Number, default: 0, validator: function(t3) {
            return t3 >= 0;
          } }, w: { type: [String, Number], default: 200, validator: function(t3) {
            return "string" == typeof t3 ? "auto" === t3 : t3 >= 0;
          } }, h: { type: [String, Number], default: 200, validator: function(t3) {
            return "string" == typeof t3 ? "auto" === t3 : t3 >= 0;
          } }, minw: { type: Number, default: 50, validator: function(t3) {
            return t3 >= 0;
          } }, minh: { type: Number, default: 50, validator: function(t3) {
            return t3 >= 0;
          } }, x: { type: Number, default: 0, validator: function(t3) {
            return "number" == typeof t3;
          } }, y: { type: Number, default: 0, validator: function(t3) {
            return "number" == typeof t3;
          } }, z: { type: [String, Number], default: "auto", validator: function(t3) {
            return "string" == typeof t3 ? "auto" === t3 : t3 >= 0;
          } }, dragHandle: { type: String, default: null }, dragCancel: { type: String, default: null }, sticks: { type: Array, default: function() {
            return ["tl", "tm", "tr", "mr", "br", "bm", "bl", "ml"];
          } }, axis: { type: String, default: "both", validator: function(t3) {
            return -1 !== ["x", "y", "both", "none"].indexOf(t3);
          } }, contentClass: { type: String, required: false, default: "" } }, data: function() {
            return { fixAspectRatio: null, active: null, zIndex: null, parentWidth: null, parentHeight: null, left: null, top: null, right: null, bottom: null, minHeight: null };
          }, beforeCreate: function() {
            this.stickDrag = false, this.bodyDrag = false, this.dimensionsBeforeMove = { pointerX: 0, pointerY: 0, x: 0, y: 0, w: 0, h: 0 }, this.limits = { left: { min: null, max: null }, right: { min: null, max: null }, top: { min: null, max: null }, bottom: { min: null, max: null } }, this.currentStick = null;
          }, mounted: function() {
            var t3 = this;
            this.parentElement = this.$el.parentNode, this.parentWidth = this.parentW ? this.parentW : this.parentElement.clientWidth, this.parentHeight = this.parentH ? this.parentH : this.parentElement.clientHeight, this.left = this.x, this.top = this.y, this.right = this.parentWidth - ("auto" === this.w ? this.$refs.container.scrollWidth : this.w) - this.left, this.bottom = this.parentHeight - ("auto" === this.h ? this.$refs.container.scrollHeight : this.h) - this.top, this.domEvents = /* @__PURE__ */ new Map([["mousemove", this.move], ["mouseup", this.up], ["mouseleave", this.up], ["mousedown", this.deselect], ["touchmove", this.move], ["touchend", this.up], ["touchcancel", this.up], ["touchstart", this.up]]), this.domEvents.forEach(function(t4, e3) {
              document.documentElement.addEventListener(e3, t4);
            }), this.dragHandle && e2(this.$el.querySelectorAll(this.dragHandle)).forEach(function(e3) {
              e3.setAttribute("data-drag-handle", t3._uid);
            }), this.dragCancel && e2(this.$el.querySelectorAll(this.dragCancel)).forEach(function(e3) {
              e3.setAttribute("data-drag-cancel", t3._uid);
            });
          }, beforeUnmount: function() {
            this.domEvents.forEach(function(t3, e3) {
              document.documentElement.removeEventListener(e3, t3);
            });
          }, methods: { deselect: function() {
            this.preventActiveBehavior || (this.active = false);
          }, move: function(t3) {
            if (this.stickDrag || this.bodyDrag) {
              t3.stopPropagation();
              var e3 = void 0 !== t3.pageX ? t3.pageX : t3.touches[0].pageX, i3 = void 0 !== t3.pageY ? t3.pageY : t3.touches[0].pageY, n2 = this.dimensionsBeforeMove, o2 = { x: (n2.pointerX - e3) / this.parentScaleX, y: (n2.pointerY - i3) / this.parentScaleY };
              if (this.stickDrag && this.stickMove(o2), this.bodyDrag) {
                if ("x" === this.axis)
                  o2.y = 0;
                else if ("y" === this.axis)
                  o2.x = 0;
                else if ("none" === this.axis)
                  return;
                this.bodyMove(o2);
              }
            }
          }, up: function(t3) {
            this.stickDrag ? this.stickUp(t3) : this.bodyDrag && this.bodyUp(t3);
          }, bodyDown: function(t3) {
            var e3 = t3.target, i3 = t3.button;
            if (this.preventActiveBehavior || (this.active = true), (!i3 || 0 === i3) && (this.$emit("clicked", t3), this.active && !(this.dragHandle && e3.getAttribute("data-drag-handle") !== this._uid.toString() || this.dragCancel && e3.getAttribute("data-drag-cancel") === this._uid.toString()))) {
              void 0 !== t3.stopPropagation && t3.stopPropagation(), void 0 !== t3.preventDefault && t3.preventDefault(), this.isDraggable && (this.bodyDrag = true);
              var n2 = void 0 !== t3.pageX ? t3.pageX : t3.touches[0].pageX, o2 = void 0 !== t3.pageY ? t3.pageY : t3.touches[0].pageY;
              this.saveDimensionsBeforeMove({ pointerX: n2, pointerY: o2 }), this.parentLimitation && (this.limits = this.calcDragLimitation());
            }
          }, bodyMove: function(t3) {
            var e3 = this.dimensionsBeforeMove, i3 = this.parentWidth, n2 = this.parentHeight, o2 = this.gridX, r2 = this.gridY, a2 = this.width, s2 = this.height, h2 = e3.top - t3.y, c2 = e3.bottom + t3.y, l2 = e3.left - t3.x, u2 = e3.right + t3.x;
            if (this.snapToGrid) {
              var d = true, p = true, f = h2 - Math.floor(h2 / r2) * r2, m = n2 - c2 - Math.floor((n2 - c2) / r2) * r2, g = l2 - Math.floor(l2 / o2) * o2, v = i3 - u2 - Math.floor((i3 - u2) / o2) * o2;
              f > r2 / 2 && (f -= r2), m > r2 / 2 && (m -= r2), g > o2 / 2 && (g -= o2), v > o2 / 2 && (v -= o2), Math.abs(m) < Math.abs(f) && (d = false), Math.abs(v) < Math.abs(g) && (p = false), c2 = n2 - s2 - (h2 -= d ? f : m), u2 = i3 - a2 - (l2 -= p ? g : v);
            }
            var b = this.rectCorrectionByLimit({ newLeft: l2, newRight: u2, newTop: h2, newBottom: c2 });
            this.left = b.newLeft, this.right = b.newRight, this.top = b.newTop, this.bottom = b.newBottom, this.$emit("dragging", this.rect);
          }, bodyUp: function() {
            this.bodyDrag = false, this.$emit("dragging", this.rect), this.$emit("dragstop", this.rect), this.dimensionsBeforeMove = { pointerX: 0, pointerY: 0, x: 0, y: 0, w: 0, h: 0 }, this.limits = { left: { min: null, max: null }, right: { min: null, max: null }, top: { min: null, max: null }, bottom: { min: null, max: null } };
          }, stickDown: function(t3, e3) {
            var i3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            if (this.isResizable && this.active || i3) {
              this.stickDrag = true;
              var n2 = void 0 !== e3.pageX ? e3.pageX : e3.touches[0].pageX, o2 = void 0 !== e3.pageY ? e3.pageY : e3.touches[0].pageY;
              this.saveDimensionsBeforeMove({ pointerX: n2, pointerY: o2 }), this.currentStick = t3, this.limits = this.calcResizeLimits();
            }
          }, saveDimensionsBeforeMove: function(t3) {
            var e3 = t3.pointerX, i3 = t3.pointerY;
            this.dimensionsBeforeMove.pointerX = e3, this.dimensionsBeforeMove.pointerY = i3, this.dimensionsBeforeMove.left = this.left, this.dimensionsBeforeMove.right = this.right, this.dimensionsBeforeMove.top = this.top, this.dimensionsBeforeMove.bottom = this.bottom, this.dimensionsBeforeMove.width = this.width, this.dimensionsBeforeMove.height = this.height, this.aspectFactor = this.width / this.height;
          }, stickMove: function(t3) {
            var e3 = this.currentStick, i3 = this.dimensionsBeforeMove, n2 = this.gridY, o2 = this.gridX, r2 = this.snapToGrid, a2 = this.parentHeight, s2 = this.parentWidth, h2 = i3.top, c2 = i3.bottom, l2 = i3.left, u2 = i3.right;
            switch (e3[0]) {
              case "b":
                c2 = i3.bottom + t3.y, r2 && (c2 = a2 - Math.round((a2 - c2) / n2) * n2);
                break;
              case "t":
                h2 = i3.top - t3.y, r2 && (h2 = Math.round(h2 / n2) * n2);
            }
            switch (e3[1]) {
              case "r":
                u2 = i3.right + t3.x, r2 && (u2 = s2 - Math.round((s2 - u2) / o2) * o2);
                break;
              case "l":
                l2 = i3.left - t3.x, r2 && (l2 = Math.round(l2 / o2) * o2);
            }
            var d = this.rectCorrectionByLimit({ newLeft: l2, newRight: u2, newTop: h2, newBottom: c2 });
            if (l2 = d.newLeft, u2 = d.newRight, h2 = d.newTop, c2 = d.newBottom, this.aspectRatio) {
              var p = this.rectCorrectionByAspectRatio({ newLeft: l2, newRight: u2, newTop: h2, newBottom: c2 });
              l2 = p.newLeft, u2 = p.newRight, h2 = p.newTop, c2 = p.newBottom;
            }
            this.left = l2, this.right = u2, this.top = h2, this.bottom = c2, this.$emit("resizing", this.rect);
          }, stickUp: function() {
            this.stickDrag = false, this.dimensionsBeforeMove = { pointerX: 0, pointerY: 0, x: 0, y: 0, w: 0, h: 0 }, this.limits = { left: { min: null, max: null }, right: { min: null, max: null }, top: { min: null, max: null }, bottom: { min: null, max: null } }, this.$emit("resizing", this.rect), this.$emit("resizestop", this.rect);
          }, calcDragLimitation: function() {
            var t3 = this.parentWidth, e3 = this.parentHeight;
            return { left: { min: 0, max: t3 - this.width }, right: { min: 0, max: t3 - this.width }, top: { min: 0, max: e3 - this.height }, bottom: { min: 0, max: e3 - this.height } };
          }, calcResizeLimits: function() {
            var t3 = this.aspectFactor, e3 = this.width, i3 = this.height, n2 = this.bottom, o2 = this.top, r2 = this.left, a2 = this.right, s2 = this.minh, h2 = this.minw, c2 = this.parentLimitation ? 0 : null;
            this.aspectRatio && (h2 / s2 > t3 ? s2 = h2 / t3 : h2 = t3 * s2);
            var l2 = { left: { min: c2, max: r2 + (e3 - h2) }, right: { min: c2, max: a2 + (e3 - h2) }, top: { min: c2, max: o2 + (i3 - s2) }, bottom: { min: c2, max: n2 + (i3 - s2) } };
            if (this.aspectRatio) {
              var u2 = { left: { min: r2 - Math.min(o2, n2) * t3 * 2, max: r2 + (i3 - s2) / 2 * t3 * 2 }, right: { min: a2 - Math.min(o2, n2) * t3 * 2, max: a2 + (i3 - s2) / 2 * t3 * 2 }, top: { min: o2 - Math.min(r2, a2) / t3 * 2, max: o2 + (e3 - h2) / 2 / t3 * 2 }, bottom: { min: n2 - Math.min(r2, a2) / t3 * 2, max: n2 + (e3 - h2) / 2 / t3 * 2 } };
              "m" === this.currentStick[0] ? (l2.left = { min: Math.max(l2.left.min, u2.left.min), max: Math.min(l2.left.max, u2.left.max) }, l2.right = { min: Math.max(l2.right.min, u2.right.min), max: Math.min(l2.right.max, u2.right.max) }) : "m" === this.currentStick[1] && (l2.top = { min: Math.max(l2.top.min, u2.top.min), max: Math.min(l2.top.max, u2.top.max) }, l2.bottom = { min: Math.max(l2.bottom.min, u2.bottom.min), max: Math.min(l2.bottom.max, u2.bottom.max) });
            }
            return l2;
          }, sideCorrectionByLimit: function(t3, e3) {
            var i3 = e3;
            return null !== t3.min && e3 < t3.min ? i3 = t3.min : null !== t3.max && t3.max < e3 && (i3 = t3.max), i3;
          }, rectCorrectionByLimit: function(t3) {
            var e3 = this.limits, i3 = t3.newRight, n2 = t3.newLeft, o2 = t3.newBottom, r2 = t3.newTop;
            return { newLeft: n2 = this.sideCorrectionByLimit(e3.left, n2), newRight: i3 = this.sideCorrectionByLimit(e3.right, i3), newTop: r2 = this.sideCorrectionByLimit(e3.top, r2), newBottom: o2 = this.sideCorrectionByLimit(e3.bottom, o2) };
          }, rectCorrectionByAspectRatio: function(t3) {
            var e3 = t3.newLeft, i3 = t3.newRight, n2 = t3.newTop, o2 = t3.newBottom, r2 = this.parentWidth, a2 = this.parentHeight, s2 = this.currentStick, h2 = this.aspectFactor, c2 = this.dimensionsBeforeMove, l2 = r2 - e3 - i3, u2 = a2 - n2 - o2;
            if ("m" === s2[1]) {
              var d = u2 - c2.height;
              e3 -= d * h2 / 2, i3 -= d * h2 / 2;
            } else if ("m" === s2[0]) {
              var p = l2 - c2.width;
              n2 -= p / h2 / 2, o2 -= p / h2 / 2;
            } else
              l2 / u2 > h2 ? (l2 = h2 * u2, "l" === s2[1] ? e3 = r2 - i3 - l2 : i3 = r2 - e3 - l2) : (u2 = l2 / h2, "t" === s2[0] ? n2 = a2 - o2 - u2 : o2 = a2 - n2 - u2);
            return { newLeft: e3, newRight: i3, newTop: n2, newBottom: o2 };
          } }, computed: { positionStyle: function() {
            return { top: this.top + "px", left: this.left + "px", zIndex: this.zIndex };
          }, sizeStyle: function() {
            return { width: this.width + "px", height: this.height + "px" };
          }, vdrStick: function() {
            var t3 = this;
            return function(e3) {
              var i3 = { width: "".concat(t3.stickSize / t3.parentScaleX, "px"), height: "".concat(t3.stickSize / t3.parentScaleY, "px") };
              return i3[r[e3[0]]] = "".concat(t3.stickSize / t3.parentScaleX / -2, "px"), i3[a[e3[1]]] = "".concat(t3.stickSize / t3.parentScaleX / -2, "px"), i3;
            };
          }, width: function() {
            return this.parentWidth - this.left - this.right;
          }, height: function() {
            return this.parentHeight - this.top - this.bottom;
          }, rect: function() {
            return { left: Math.round(this.left), top: Math.round(this.top), width: Math.round(this.width), height: Math.round(this.height) };
          } }, watch: { active: function(t3) {
            t3 ? this.$emit("activated") : this.$emit("deactivated");
          }, isActive: { immediate: true, handler: function(t3) {
            this.active = t3;
          } }, z: { immediate: true, handler: function(t3) {
            (t3 >= 0 || "auto" === t3) && (this.zIndex = t3);
          } }, x: { handler: function(t3, e3) {
            var i3 = this;
            if (!this.stickDrag && !this.bodyDrag && t3 !== this.left) {
              var n2 = e3 - t3;
              this.bodyDown({ pageX: this.left, pageY: this.top }), this.bodyMove({ x: n2, y: 0 }), this.$nextTick(function() {
                i3.bodyUp();
              });
            }
          } }, y: { handler: function(t3, e3) {
            var i3 = this;
            if (!this.stickDrag && !this.bodyDrag && t3 !== this.top) {
              var n2 = e3 - t3;
              this.bodyDown({ pageX: this.left, pageY: this.top }), this.bodyMove({ x: 0, y: n2 }), this.$nextTick(function() {
                i3.bodyUp();
              });
            }
          } }, w: { handler: function(t3, e3) {
            var i3 = this;
            if (!this.stickDrag && !this.bodyDrag && t3 !== this.width) {
              var n2 = e3 - t3;
              this.stickDown("mr", { pageX: this.right, pageY: this.top + this.height / 2 }, true), this.stickMove({ x: n2, y: 0 }), this.$nextTick(function() {
                i3.stickUp();
              });
            }
          } }, h: { handler: function(t3, e3) {
            var i3 = this;
            if (!this.stickDrag && !this.bodyDrag && t3 !== this.height) {
              var n2 = e3 - t3;
              this.stickDown("bm", { pageX: this.left + this.width / 2, pageY: this.bottom }, true), this.stickMove({ x: 0, y: n2 }), this.$nextTick(function() {
                i3.stickUp();
              });
            }
          } }, parentW: function(t3) {
            this.right = t3 - this.width - this.left, this.parentWidth = t3;
          }, parentH: function(t3) {
            this.bottom = t3 - this.height - this.top, this.parentHeight = t3;
          } } };
          var h = n(379), c = n.n(h), l = n(566);
          c()(l.Z, { insert: "head", singleton: false }), l.Z.locals, s.render = function(e3, i3) {
            return (0, t2.openBlock)(), (0, t2.createBlock)("div", { class: ["vdr", "".concat(e3.active || e3.isActive ? "active" : "inactive", " ").concat(e3.contentClass ? e3.contentClass : "")], style: e3.positionStyle, onMousedown: i3[1] || (i3[1] = function(t3) {
              return e3.bodyDown(t3);
            }), onTouchstart: i3[2] || (i3[2] = function(t3) {
              return e3.bodyDown(t3);
            }), onTouchend: i3[3] || (i3[3] = function(t3) {
              return e3.up(t3);
            }), ref: "container", tabindex: "0" }, [(0, t2.createVNode)("div", { style: e3.sizeStyle, class: "content-container", ref: "container2" }, [(0, t2.renderSlot)(e3.$slots, "default")], 4), ((0, t2.openBlock)(true), (0, t2.createBlock)(t2.Fragment, null, (0, t2.renderList)(e3.sticks, function(i4) {
              return (0, t2.openBlock)(), (0, t2.createBlock)("div", { class: ["vdr-stick", ["vdr-stick-" + i4, e3.isResizable ? "" : "not-resizable"]], onMousedown: (0, t2.withModifiers)(function(t3) {
                return e3.stickDown(i4, t3);
              }, ["stop", "prevent"]), onTouchstart: (0, t2.withModifiers)(function(t3) {
                return e3.stickDown(i4, t3);
              }, ["stop", "prevent"]), style: e3.vdrStick(i4) }, null, 46, ["onMousedown", "onTouchstart"]);
            }), 256))], 38);
          };
          const u = s;
        })(), o;
      })();
    });
  }
});
export default require_dist();
//# sourceMappingURL=vue3-drag-resize.js.map
