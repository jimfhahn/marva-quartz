import { ref as E, computed as O, watch as I, nextTick as oe, onBeforeUnmount as ae, reactive as se, onMounted as Pe, defineComponent as ne, inject as _, toRef as Ge, unref as h, withDirectives as we, openBlock as L, createElementBlock as H, normalizeClass as be, normalizeStyle as Te, withKeys as Ue, withModifiers as Se, createBlock as $, Transition as Me, mergeProps as z, toHandlers as ge, withCtx as J, createCommentVNode as Y, createVNode as Ie, createElementVNode as j, renderSlot as re, vShow as Ce, Teleport as We, normalizeProps as De, guardReactiveProps as Xe, useAttrs as Ze, getCurrentInstance as Ke, markRaw as K, shallowRef as qe, Fragment as _e, renderList as Ee, resolveDynamicComponent as te, createSlots as Je, shallowReactive as le } from "vue";
import { useEventListener as A, tryOnUnmounted as Qe, isString as ie } from "@vueuse/core";
import { useFocusTrap as eo } from "@vueuse/integrations/useFocusTrap";
const ue = {
  /**
   * @description An uniq name for the open/close a modal via vfm.open/vfm.close APIs.
   * @default `undefined`
   * @example Symbol: `Symbol('MyModal')`
   * @example String: `'AUniqString'`
   * @example Number: `300`
   */
  modalId: {
    type: [String, Number, Symbol],
    default: void 0
  },
  /**
   * @description Display the modal or not.
   * @default `undefined`
   * @example
   * ```js
   * const showModal = ref(false)
   * v-model="showModal"
   * ```
   */
  modelValue: {
    type: Boolean,
    default: void 0
  },
  /**
   * @description Render the modal via `if` or `show`.
   * @default `'if'`
   * @example
   * ```js
   * displayDirective: 'if'
   * ```
   * @example
   * ```js
   * displayDirective: 'show'
   * ```
   */
  displayDirective: {
    type: String,
    default: "if",
    validator: (e) => ["if", "show"].includes(e)
  },
  /**
   * @description Hide the overlay or not.
   * @default `undefined`
   * @example
   * ```js
   * hideOverlay="true"
   * ```
   */
  hideOverlay: {
    type: Boolean,
    default: void 0
  },
  /**
   * @description Customize the overlay transition.
   * @default `undefined`
   */
  overlayTransition: {
    type: [String, Object],
    default: void 0
  },
  /**
   * @description Customize the content transition.
   * @default `undefined`
   */
  contentTransition: {
    type: [String, Object],
    default: void 0
  },
  /**
   * @description Bind class to vfm__overlay.
   * @default `undefined`
   */
  overlayClass: {
    type: void 0,
    default: void 0
  },
  /**
   * @description Bind class to vfm__content.
   * @default `undefined`
   */
  contentClass: {
    type: void 0,
    default: void 0
  },
  /**
   * @description Bind style to vfm__overlay.
   * @default `undefined`
   */
  overlayStyle: {
    type: [String, Object, Array],
    default: void 0
  },
  /**
   * @description Bind style to vfm__content.
   * @default `undefined`
   */
  contentStyle: {
    type: [String, Object, Array],
    default: void 0
  },
  /**
   * @description Is it allow to close the modal by clicking the overlay.
   * @default `true`
   */
  clickToClose: {
    type: Boolean,
    default: !0
  },
  /**
   * @description Is it allow to close the modal by keypress `esc`.
   * @default `true`
   */
  escToClose: {
    type: Boolean,
    default: !0
  },
  /**
   * @description Is it allow to click outside of the vfm__content when the modal is opened
   * @default `'non-interactive'`
   */
  background: {
    type: String,
    default: "non-interactive",
    validator: (e) => ["interactive", "non-interactive"].includes(e)
  },
  /**
   * @description
   * * Use `{ disabled: true }` to disable the focusTrap.
   * * Checkout the createOptions type here https://github.com/focus-trap/focus-trap for more.
   * @default `{ allowOutsideClick: true }`
   */
  focusTrap: {
    type: [Boolean, Object],
    default: () => ({
      allowOutsideClick: !0
    })
  },
  /**
   * @description Lock body scroll or not when the modal is opened.
   * @default `true`
   */
  lockScroll: {
    type: Boolean,
    default: !0
  },
  /**
   * @description Define how to increase the zIndex when there are nested modals
   * @default `({ index }) => 1000 + 2 * index`
   */
  zIndexFn: {
    type: Function,
    default: ({ index: e }) => 1e3 + 2 * e
  },
  /**
   * @description The direction of swiping to close the modal
   * @default `none`
   * @example
   * Set swipeToClose="none" to disable swiping to close
   * ```js
   * swipeToClose="none"
   * ```
   */
  swipeToClose: {
    type: String,
    default: "none",
    validator: (e) => ["none", "up", "right", "down", "left"].includes(e)
  },
  /**
   * @description Threshold for swipe to close
   * @default `0`
   */
  threshold: {
    type: Number,
    default: 0
  },
  /**
   * @description If set `:showSwipeBanner="true"`, only allow clicking `swipe-banner` slot to swipe to close
   * @default `undefined`
   * @example
   * ```js
   * swipeToClose="right"
   * :showSwipeBanner="true"
   * ```
   * ```html
   * <VueFinalModal
   *   ...
   *   swipeToClose="right"
   *   :showSwipeBanner="true"
   * >
   *   <template #swipe-banner>
   *     <div style="position: absolute; height: 100%; top: 0; left: 0; width: 10px;" />
   *   </template>
   *   ...modal content
   * </VueFinalModal>
   * ```
   */
  showSwipeBanner: {
    type: Boolean,
    default: void 0
  },
  /**
   * @description When set `:preventNavigationGestures="true"`, there will be two invisible bars for prevent navigation gestures including swiping back/forward on mobile webkit. For example: Safari mobile.
   * @default `undefined`
   * @example
   * Set preventNavigationGestures="true" to prevent Safari navigation gestures including swiping back/forward.
   * ```js
   * :preventNavigationGestures="true"
   * ```
   */
  preventNavigationGestures: {
    type: Boolean,
    default: void 0
  }
};
function Oe(e = !1) {
  const o = E(e), n = E(o.value ? 0 : void 0);
  return [o, n, {
    beforeEnter() {
      n.value = 1;
    },
    afterEnter() {
      n.value = 0;
    },
    beforeLeave() {
      n.value = 3;
    },
    afterLeave() {
      n.value = 2;
    }
  }];
}
function oo(e, o) {
  const { modelValueLocal: n, onEntering: t, onEnter: u, onLeaving: l, onLeave: s } = o, a = E(n.value), [i, c, d] = Oe(a.value), [m, f, v] = Oe(a.value), g = O(() => typeof e.contentTransition == "string" ? { name: e.contentTransition } : { ...e.contentTransition }), V = O(() => typeof e.overlayTransition == "string" ? { name: e.overlayTransition } : { ...e.overlayTransition }), k = O(
    () => (e.hideOverlay || f.value === 2) && c.value === 2
    /* Leave */
  );
  I(
    k,
    (B) => {
      B && (a.value = !1);
    }
  ), I(c, (B) => {
    switch (B) {
      case 1:
        return t();
      case 0:
        return u();
      case 3:
        return l();
      case 2:
        return s();
    }
  });
  async function y() {
    a.value = !0, await oe(), i.value = !0, m.value = !0;
  }
  function C() {
    i.value = !1, m.value = !1;
  }
  return {
    visible: a,
    contentVisible: i,
    contentListeners: d,
    contentTransition: g,
    overlayVisible: m,
    overlayListeners: v,
    overlayTransition: V,
    enterTransition: y,
    leaveTransition: C
  };
}
function no(e, o, n) {
  const { vfmRootEl: t, visible: u, modelValueLocal: l } = n, s = E();
  function a() {
    u.value && e.escToClose && (l.value = !1);
  }
  function i(d) {
    s.value = d == null ? void 0 : d.target;
  }
  function c() {
    s.value === t.value && (e.clickToClose ? l.value = !1 : o("clickOutside"));
  }
  return {
    onEsc: a,
    onMouseupRoot: c,
    onMousedown: i
  };
}
function to(e, o) {
  const n = E(!!e.modelValue);
  return I(() => e.modelValue, (t) => {
    n.value = !!t;
  }), I(n, (t) => {
    t !== e.modelValue && o("update:modelValue", t);
  }), {
    modelValueLocal: n
  };
}
function lo(e, o) {
  if (e.focusTrap === !1)
    return {
      focus() {
      },
      focusLast() {
      },
      blur() {
      }
    };
  const { focusEl: n, openedModals: t } = o, { hasFocus: u, activate: l, deactivate: s } = eo(n, e.focusTrap);
  function a() {
    requestAnimationFrame(() => {
      l();
    });
  }
  function i() {
    t.length <= 0 || oe(() => {
      const d = t[t.length - 1];
      d == null || d.value.focus();
    });
  }
  function c() {
    u.value && s();
  }
  return { focus: a, focusLast: i, blur: c };
}
let ce = !1;
if (typeof window < "u") {
  const e = {
    get passive() {
      ce = !0;
    }
  };
  window.addEventListener("testPassive", null, e), window.removeEventListener("testPassive", null, e);
}
const xe = typeof window < "u" && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === "MacIntel" && window.navigator.maxTouchPoints > 1);
let R = [], Q = !1, q = 0, Ae = -1, G, U;
const so = (e) => {
  if (!e || e.nodeType !== Node.ELEMENT_NODE)
    return !1;
  const o = window.getComputedStyle(e);
  return ["auto", "scroll"].includes(o.overflowY) && e.scrollHeight > e.clientHeight;
}, ro = (e, o) => !(e.scrollTop === 0 && o < 0 || e.scrollTop + e.clientHeight + o >= e.scrollHeight && o > 0), ao = (e) => {
  const o = [];
  for (; e; ) {
    if (o.push(e), e.classList.contains("vfm"))
      return o;
    e = e.parentElement;
  }
  return o;
}, io = (e, o) => {
  let n = !1;
  return ao(e).forEach((u) => {
    so(u) && ro(u, o) && (n = !0);
  }), n;
}, Fe = (e) => R.some(() => io(e, -q)), ee = (e) => {
  const o = e || window.event;
  return Fe(o.target) || o.touches.length > 1 ? !0 : (o.preventDefault && o.preventDefault(), !1);
}, uo = (e) => {
  if (U === void 0) {
    const o = !!e && e.reserveScrollBarGap === !0, n = window.innerWidth - document.documentElement.clientWidth;
    if (o && n > 0) {
      const t = parseInt(getComputedStyle(document.body).getPropertyValue("padding-right"), 10);
      U = document.body.style.paddingRight, document.body.style.paddingRight = `${t + n}px`;
    }
  }
  G === void 0 && (G = document.body.style.overflow, document.body.style.overflow = "hidden");
}, co = () => {
  U !== void 0 && (document.body.style.paddingRight = U, U = void 0), G !== void 0 && (document.body.style.overflow = G, G = void 0);
}, fo = (e) => e ? e.scrollHeight - e.scrollTop <= e.clientHeight : !1, vo = (e, o) => (q = e.targetTouches[0].clientY - Ae, Fe(e.target) ? !1 : o && o.scrollTop === 0 && q > 0 || fo(o) && q < 0 ? ee(e) : (e.stopPropagation(), !0)), po = (e, o) => {
  if (!e) {
    console.error(
      "disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices."
    );
    return;
  }
  if (R.some((t) => t.targetElement === e))
    return;
  const n = {
    targetElement: e,
    options: o || {}
  };
  R = [...R, n], xe ? (e.ontouchstart = (t) => {
    t.targetTouches.length === 1 && (Ae = t.targetTouches[0].clientY);
  }, e.ontouchmove = (t) => {
    t.targetTouches.length === 1 && vo(t, e);
  }, Q || (document.addEventListener("touchmove", ee, ce ? { passive: !1 } : void 0), Q = !0)) : uo(o);
}, mo = (e) => {
  if (!e) {
    console.error(
      "enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices."
    );
    return;
  }
  R = R.filter((o) => o.targetElement !== e), xe ? (e.ontouchstart = null, e.ontouchmove = null, Q && R.length === 0 && (document.removeEventListener("touchmove", ee, ce ? { passive: !1 } : void 0), Q = !1)) : R.length || co();
};
function yo(e, o) {
  const { lockScrollEl: n } = o;
  I(() => e.lockScroll, (l) => {
    l ? u() : t();
  }), ae(() => {
    t();
  });
  function t() {
    n.value && mo(n.value);
  }
  function u() {
    e.lockScroll && n.value && po(n.value, {
      reserveScrollBarGap: !0,
      allowTouchMove: (l) => {
        for (; l && l !== document.body; ) {
          if (l.getAttribute("vfm-scroll-lock-ignore") !== null)
            return !0;
          l = l.parentElement;
        }
        return !1;
      }
    });
  }
  return {
    enableBodyScroll: t,
    disableBodyScroll: u
  };
}
function ho(e) {
  function o(n) {
    switch (n) {
      case "beforeOpen":
        e(n);
        break;
      case "beforeClose":
        e(n);
        break;
      case "opened":
        e(n);
        break;
      case "closed":
        e(n);
        break;
    }
  }
  return {
    emitEvent: o
  };
}
function wo(e, o) {
  const { openedModals: n } = o, t = E();
  function u() {
    var l;
    t.value = (l = e.zIndexFn) == null ? void 0 : l.call(e, { index: n.length });
  }
  return {
    zIndex: t,
    refreshZIndex: u
  };
}
const bo = (e) => (...o) => {
  e && (e == null || e(...o), e = null);
}, F = () => {
};
function Z(e, o, n) {
  return e > n ? n : e < o ? o : e;
}
const Ve = (e) => {
  if (e instanceof TouchEvent) {
    const { clientX: o, clientY: n } = e.targetTouches[0];
    return { x: o, y: n };
  } else {
    const { clientX: o, clientY: n } = e;
    return { x: o, y: n };
  }
};
function To(e) {
  if (!e)
    return !1;
  let o = !1;
  const n = {
    get passive() {
      return o = !0, !1;
    }
  };
  return e.addEventListener("x", F, n), e.removeEventListener("x", F), o;
}
function So(e, {
  threshold: o = 0,
  onSwipeStart: n,
  onSwipe: t,
  onSwipeEnd: u,
  passive: l = !0
}) {
  const s = se({ x: 0, y: 0 }), a = se({ x: 0, y: 0 }), i = O(() => s.x - a.x), c = O(() => s.y - a.y), { max: d, abs: m } = Math, f = O(
    () => d(m(i.value), m(c.value)) >= o
  ), v = E(!1), g = O(() => f.value ? m(i.value) > m(c.value) ? i.value > 0 ? "left" : "right" : c.value > 0 ? "up" : "down" : "none"), V = (p, b) => {
    s.x = p, s.y = b;
  }, k = (p, b) => {
    a.x = p, a.y = b;
  };
  let y, C;
  function B(p) {
    y.capture && !y.passive && p.preventDefault();
    const { x: b, y: x } = Ve(p);
    V(b, x), k(b, x), n == null || n(p), C = [
      A(e, "mousemove", D, y),
      A(e, "touchmove", D, y),
      A(e, "mouseup", r, y),
      A(e, "touchend", r, y),
      A(e, "touchcancel", r, y)
    ];
  }
  function D(p) {
    const { x: b, y: x } = Ve(p);
    k(b, x), !v.value && f.value && (v.value = !0), v.value && (t == null || t(p));
  }
  function r(p) {
    v.value && (u == null || u(p, g.value)), v.value = !1, C.forEach((b) => b());
  }
  let w = [];
  return Pe(() => {
    const p = To(window == null ? void 0 : window.document);
    l ? y = p ? { passive: !0 } : { capture: !1 } : y = p ? { passive: !1, capture: !0 } : { capture: !0 }, w = [
      A(e, "mousedown", B, y),
      A(e, "touchstart", B, y)
    ];
  }), {
    isSwiping: v,
    direction: g,
    coordsStart: s,
    coordsEnd: a,
    lengthX: i,
    lengthY: c,
    stop: () => {
      w.forEach((p) => p()), C.forEach((p) => p());
    }
  };
}
function Mo(e, o) {
  const { modelValueLocal: n } = o, t = 0.1, u = 300, l = E(), s = E(), a = O(() => e.showSwipeBanner ? s.value : l.value), i = E(0), c = E(!0);
  let d = F, m = !0, f, v = !1;
  const { lengthX: g, lengthY: V, direction: k, isSwiping: y } = So(a, {
    threshold: e.threshold,
    onSwipeStart(r) {
      d = A(document, "selectionchange", () => {
        var w;
        c.value = (w = window.getSelection()) == null ? void 0 : w.isCollapsed;
      }), f = new Date().getTime(), v = C(r == null ? void 0 : r.target);
    },
    onSwipe() {
      var r, w, P, p;
      if (v && c.value && k.value === e.swipeToClose) {
        if (k.value === "up") {
          const b = Z(Math.abs(V.value || 0), 0, ((r = a.value) == null ? void 0 : r.offsetHeight) || 0) - (e.threshold || 0);
          i.value = b;
        } else if (k.value === "down") {
          const b = Z(Math.abs(V.value || 0), 0, ((w = a.value) == null ? void 0 : w.offsetHeight) || 0) - (e.threshold || 0);
          i.value = -b;
        } else if (k.value === "right") {
          const b = Z(Math.abs(g.value || 0), 0, ((P = a.value) == null ? void 0 : P.offsetWidth) || 0) - (e.threshold || 0);
          i.value = -b;
        } else if (k.value === "left") {
          const b = Z(Math.abs(g.value || 0), 0, ((p = a.value) == null ? void 0 : p.offsetWidth) || 0) - (e.threshold || 0);
          i.value = b;
        }
      }
    },
    onSwipeEnd(r, w) {
      if (d(), !c.value) {
        c.value = !0;
        return;
      }
      const P = new Date().getTime(), p = w === e.swipeToClose, b = (() => {
        var W, X;
        if (w === "up" || w === "down")
          return Math.abs((V == null ? void 0 : V.value) || 0) > t * (((W = a.value) == null ? void 0 : W.offsetHeight) || 0);
        if (w === "left" || w === "right")
          return Math.abs((g == null ? void 0 : g.value) || 0) > t * (((X = a.value) == null ? void 0 : X.offsetWidth) || 0);
      })(), x = P - f <= u;
      if (m && v && p && (b || x)) {
        i.value = 0, n.value = !1;
        return;
      }
      i.value = 0;
    }
  });
  I(
    () => c.value,
    (r) => {
      r || (i.value = 0);
    }
  ), I(
    () => i.value,
    (r, w) => {
      switch (e.swipeToClose) {
        case "down":
        case "right":
          m = r < w;
          break;
        case "up":
        case "left":
          m = r > w;
          break;
      }
    }
  );
  function C(r) {
    const w = r == null ? void 0 : r.tagName;
    if (!w || ["INPUT", "TEXTAREA"].includes(w))
      return !1;
    const P = (() => {
      switch (e.swipeToClose) {
        case "up":
          return (r == null ? void 0 : r.scrollTop) + (r == null ? void 0 : r.clientHeight) === (r == null ? void 0 : r.scrollHeight);
        case "left":
          return (r == null ? void 0 : r.scrollLeft) + (r == null ? void 0 : r.clientWidth) === (r == null ? void 0 : r.scrollWidth);
        case "down":
          return (r == null ? void 0 : r.scrollTop) === 0;
        case "right":
          return (r == null ? void 0 : r.scrollLeft) === 0;
        default:
          return !1;
      }
    })();
    return r === a.value ? P : P && C(r == null ? void 0 : r.parentElement);
  }
  I(
    () => n.value,
    (r) => {
      r && (i.value = 0);
    }
  );
  const B = O(() => {
    if (e.swipeToClose === "none")
      return;
    const r = (() => {
      switch (e.swipeToClose) {
        case "up":
        case "down":
          return "translateY";
        case "left":
        case "right":
          return "translateX";
      }
    })();
    return {
      class: { "vfm-bounce-back": !y.value },
      style: y.value ? { transform: `${r}(${-i.value}px)` } : ""
    };
  });
  function D(r) {
    e.preventNavigationGestures && r.preventDefault();
  }
  return {
    vfmContentEl: l,
    swipeBannerEl: s,
    bindSwipe: B,
    onTouchStartSwipeBanner: D
  };
}
const de = Symbol("vfm"), fe = Symbol("internalVfm"), go = /* @__PURE__ */ ne({
  __name: "CoreModal",
  props: ue,
  emits: ["update:modelValue", "beforeOpen", "opened", "beforeClose", "closed", "clickOutside"],
  setup(e, { emit: o }) {
    const n = e, { modals: t, openedModals: u } = _(de, {
      modals: [],
      openedModals: []
    }), {
      moveToLastOpenedModals: l,
      openLastOverlay: s,
      deleteFromOpenedModals: a,
      deleteFromModals: i
    } = _(fe, {
      moveToLastOpenedModals: F,
      openLastOverlay: F,
      deleteFromOpenedModals: F,
      deleteFromModals: F
    }), c = E(), { zIndex: d, refreshZIndex: m } = wo(n, { openedModals: u }), { focus: f, focusLast: v, blur: g } = lo(n, { focusEl: c, openedModals: u }), { enableBodyScroll: V, disableBodyScroll: k } = yo(n, { lockScrollEl: c }), { modelValueLocal: y } = to(n, o), { emitEvent: C } = ho(o);
    let B = F;
    const {
      visible: D,
      contentVisible: r,
      contentListeners: w,
      contentTransition: P,
      overlayVisible: p,
      overlayListeners: b,
      overlayTransition: x,
      enterTransition: W,
      leaveTransition: X
    } = oo(n, {
      modelValueLocal: y,
      async onEntering() {
        f(), await oe(), k();
      },
      onEnter() {
        C("opened"), B("opened");
      },
      onLeaving() {
        g();
      },
      onLeave() {
        C("closed"), B("closed");
      }
    }), { onEsc: ve, onMouseupRoot: He, onMousedown: pe } = no(n, o, { vfmRootEl: c, visible: D, modelValueLocal: y }), {
      vfmContentEl: Ne,
      swipeBannerEl: je,
      bindSwipe: Ye,
      onTouchStartSwipeBanner: me
    } = Mo(n, { modelValueLocal: y }), ye = Ge(n, "hideOverlay"), N = O(() => ({
      modalId: n.modalId,
      hideOverlay: ye,
      overlayVisible: p,
      focus: f,
      toggle(T) {
        return new Promise((S) => {
          B = bo((ze) => S(ze));
          const M = typeof T == "boolean" ? T : !y.value;
          y.value = M, o("update:modelValue", M);
        });
      }
    }));
    Pe(() => {
      t.push(N);
    }), y.value && he(), I(y, (T) => {
      T ? he() : $e();
    });
    async function he() {
      C("beforeOpen"), m(), l(N), s(), W();
    }
    function $e() {
      C("beforeClose"), V(), a(N), v(), s(), X();
    }
    return ae(() => {
      V(), i(N), a(N), v(), s();
    }), (T, S) => T.displayDirective !== "if" || h(D) ? we((L(), H("div", {
      key: 0,
      ref_key: "vfmRootEl",
      ref: c,
      class: be(["vfm vfm--fixed vfm--inset", { "vfm--prevent-none": T.background === "interactive" }]),
      style: Te({ zIndex: h(d) }),
      role: "dialog",
      "aria-modal": "true",
      onKeydown: S[7] || (S[7] = Ue(
        //@ts-ignore
        (...M) => h(ve) && h(ve)(...M),
        ["esc"]
      )),
      onMouseup: S[8] || (S[8] = Se(() => h(He)(), ["self"])),
      onMousedown: S[9] || (S[9] = Se((M) => h(pe)(M), ["self"]))
    }, [
      h(ye) ? Y("", !0) : (L(), $(Me, z({ key: 0 }, h(x), { appear: "" }, ge(h(b))), {
        default: J(() => [
          h(p) ? (L(), H("div", {
            key: 0,
            class: be(["vfm__overlay vfm--overlay vfm--absolute vfm--inset vfm--prevent-none", T.overlayClass]),
            style: Te([{ "z-index": "-1" }, T.overlayStyle]),
            "aria-hidden": "true"
          }, null, 6)) : Y("", !0)
        ]),
        _: 1
      }, 16)),
      Ie(Me, z(h(P), { appear: "" }, ge(h(w))), {
        default: J(() => [
          we(j("div", z({
            ref_key: "vfmContentEl",
            ref: Ne,
            class: ["vfm__content vfm--outline-none", [T.contentClass, { "vfm--prevent-auto": T.background === "interactive" }]],
            style: T.contentStyle,
            tabindex: "0"
          }, h(Ye), {
            onMousedown: S[6] || (S[6] = () => h(pe)())
          }), [
            re(T.$slots, "default"),
            T.showSwipeBanner ? (L(), H("div", {
              key: 0,
              ref_key: "swipeBannerEl",
              ref: je,
              class: "vfm-swipe-banner-container",
              onTouchstart: S[2] || (S[2] = (M) => h(me)(M))
            }, [
              re(T.$slots, "swipe-banner", {}, () => [
                j("div", {
                  class: "vfm-swipe-banner-back",
                  onTouchstart: S[0] || (S[0] = (M) => T.swipeToClose === "left" && M.preventDefault())
                }, null, 32),
                j("div", {
                  class: "vfm-swipe-banner-forward",
                  onTouchstart: S[1] || (S[1] = (M) => T.swipeToClose === "right" && M.preventDefault())
                }, null, 32)
              ])
            ], 544)) : !T.showSwipeBanner && T.preventNavigationGestures ? (L(), H("div", {
              key: 1,
              class: "vfm-swipe-banner-container",
              onTouchstart: S[5] || (S[5] = (M) => h(me)(M))
            }, [
              j("div", {
                class: "vfm-swipe-banner-back",
                onTouchstart: S[3] || (S[3] = (M) => T.swipeToClose === "left" && M.preventDefault())
              }, null, 32),
              j("div", {
                class: "vfm-swipe-banner-forward",
                onTouchstart: S[4] || (S[4] = (M) => T.swipeToClose === "right" && M.preventDefault())
              }, null, 32)
            ], 32)) : Y("", !0)
          ], 16), [
            [Ce, h(r)]
          ])
        ]),
        _: 3
      }, 16)
    ], 38)), [
      [Ce, T.displayDirective !== "show" || h(D)]
    ]) : Y("", !0);
  }
});
const Co = {
  ...ue,
  /**
   * @description Set `null | false` to disable teleport.
   * @default `'body'`
   * @example
   * ```js
   * teleportTo: '#modals'
   * ```
   */
  teleportTo: {
    type: [String, null, Boolean, Object],
    default: "body"
  }
}, Eo = ne({
  inheritAttrs: !1
}), Oo = /* @__PURE__ */ ne({
  ...Eo,
  __name: "VueFinalModal",
  props: Co,
  emits: ["update:modelValue", "beforeOpen", "opened", "beforeClose", "closed", "clickOutside"],
  setup(e, { emit: o }) {
    const t = Po({
      props: e,
      modalProps: ue,
      emit: o
    });
    return (u, l) => (L(), $(We, {
      to: u.teleportTo ? u.teleportTo : void 0,
      disabled: !u.teleportTo
    }, [
      Ie(go, De(Xe(h(t))), {
        default: J(() => [
          re(u.$slots, "default")
        ]),
        _: 3
      }, 16)
    ], 8, ["to", "disabled"]));
  }
});
function Re() {
  return _(de);
}
function Vo() {
  return _(fe);
}
function ke(e, o = Oo) {
  const { component: n, slots: t, ...u } = e, l = typeof t > "u" ? {} : Object.fromEntries(Object.entries(t).map(([s, a]) => ie(a) ? [s, a] : "component" in a ? [s, {
    ...a,
    component: K(a.component)
  }] : [s, K(a)]));
  return {
    ...u,
    component: K(n || o),
    slots: l
  };
}
function Ro(e) {
  var a;
  const o = se({
    id: Symbol("useModal"),
    modelValue: !!(e != null && e.defaultModelValue),
    resolveOpened: () => {
    },
    resolveClosed: () => {
    },
    attrs: {},
    ...ke(e)
  });
  o.context || (Ke() ? o.context = Re() : console.warn("[Vue Final Modal warn] useModal() can only be used inside setup() or functional components."));
  function n() {
    return o.modelValue ? Promise.resolve("[Vue Final Modal] modal is already opened") : (o.modelValue = !0, new Promise((i) => {
      o.resolveOpened = () => i("opened");
    }));
  }
  function t() {
    return o.modelValue ? (o.modelValue = !1, new Promise((i) => {
      o.resolveClosed = () => i("closed");
    })) : Promise.resolve("[Vue Final Modal] modal is already closed");
  }
  function u(i) {
    const { slots: c, ...d } = ke(i, o.component);
    Be(o, d), c && Object.entries(c).forEach(([m, f]) => {
      const v = o.slots[m];
      ie(v) ? o.slots[m] = f : Le(v) && Le(f) ? Be(v, f) : o.slots[m] = f;
    });
  }
  function l() {
    if (!o.context)
      return;
    const i = o.context.dynamicModals.indexOf(o);
    i !== -1 && o.context.dynamicModals.splice(i, 1);
  }
  const s = {
    options: o,
    open: n,
    close: t,
    patchOptions: u,
    destroy: l
  };
  return (a = s.options.context) == null || a.dynamicModals.push(s.options), Qe(() => s.destroy()), s;
}
function Ho(e) {
  return e;
}
function ko(e, o) {
  return Object.entries(o).forEach(([n, t]) => {
    e[n] = t;
  }), e;
}
function Be(e, o) {
  o.component && (e.component = o.component), o.attrs && ko(e.attrs, o.attrs);
}
function Le(e) {
  return "component" in e || "attrs" in e;
}
function Bo(e, o) {
  return Object.keys(o).reduce((n, t) => (n[t] = e[t], n), {});
}
function Lo(e) {
  return e ? {
    "onUpdate:modelValue": (o) => e("update:modelValue", o),
    onBeforeClose: () => e("beforeClose"),
    onClosed: () => e("closed"),
    onBeforeOpen: () => e("beforeOpen"),
    onOpened: () => e("opened"),
    /** onClickOutside will only be emitted when clickToClose equal to `false` */
    onClickOutside: () => e("clickOutside")
  } : {};
}
function Po(e) {
  const { props: o, modalProps: n, emit: t } = e, u = O(() => Bo(o, n)), l = Lo(t), s = Ze();
  return O(() => ({
    ...u.value,
    ...l,
    ...s
  }));
}
const Io = ["innerHTML"], No = /* @__PURE__ */ ne({
  __name: "ModalsContainer",
  setup(e) {
    const o = Re(), n = Vo(), t = Symbol("ModalsContainer"), u = O(() => {
      var i;
      return t === ((i = o.modalsContainers.value) == null ? void 0 : i[0]);
    }), l = qe([]);
    function s() {
      l.value = o.dynamicModals.filter((i) => i.modelValue);
    }
    function a(i) {
      i == null || i(), s();
    }
    return I(() => {
      var i;
      return (i = o.dynamicModals) == null ? void 0 : i.map((c) => c.modelValue);
    }, (i, c) => {
      if (!c || i.length !== c.length) {
        s();
        return;
      }
      let d = i.length, m = !1;
      for (; !m && d--; )
        i[d] === !0 && c[d] === !1 && (m = !0);
      m && s();
    }, {
      immediate: !0
    }), o.modalsContainers.value.push(t), ae(() => {
      o.modalsContainers.value = o.modalsContainers.value.filter((i) => i !== t);
    }), (i, c) => h(u) ? (L(!0), H(_e, { key: 0 }, Ee(h(l), (d, m) => (L(), $(te(d.component), z({
      key: d.id
    }, d.attrs, {
      modelValue: d.modelValue,
      "onUpdate:modelValue": (f) => d.modelValue = f,
      onClosed: (f) => a(() => {
        var v, g;
        return (g = (v = h(n)).resolvedClosed) == null ? void 0 : g.call(v, m);
      }),
      onOpened: () => {
        var f, v;
        return (v = (f = h(n)).resolvedOpened) == null ? void 0 : v.call(f, m);
      }
    }), Je({ _: 2 }, [
      Ee(d.slots, (f, v) => ({
        name: v,
        fn: J(() => [
          h(ie)(f) ? (L(), H("div", {
            key: 0,
            innerHTML: f
          }, null, 8, Io)) : "component" in f ? (L(), $(te(f.component), De(z({ key: 1 }, f.attrs)), null, 16)) : (L(), $(te(f), { key: 2 }))
        ])
      }))
    ]), 1040, ["modelValue", "onUpdate:modelValue", "onClosed", "onOpened"]))), 128)) : Y("", !0);
  }
});
function jo() {
  const e = le([]), o = le([]), n = le([]), t = E([]), u = K({
    install(l) {
      l.provide(de, u), l.config.globalProperties.$vfm = u;
      const s = Do(u);
      l.provide(fe, s);
    },
    modals: e,
    openedModals: o,
    dynamicModals: n,
    modalsContainers: t,
    get(l) {
      return e.find((s) => s.value.modalId && l === s.value.modalId);
    },
    toggle(l, s) {
      const a = u.get(l);
      return a == null ? void 0 : a.value.toggle(s);
    },
    open(l) {
      return u.toggle(l, !0);
    },
    close(l) {
      return u.toggle(l, !1);
    },
    closeAll() {
      return Promise.allSettled([o.map((l) => l.value.toggle(!1))]);
    }
  });
  return u;
}
function Do(e) {
  const { modals: o, openedModals: n, dynamicModals: t } = e, u = {
    deleteFromModals(l) {
      const s = o.findIndex((a) => a.value === l.value);
      s !== -1 && o.splice(s, 1);
    },
    moveToLastOpenedModals(l) {
      u.deleteFromOpenedModals(l), n.push(l);
    },
    deleteFromOpenedModals(l) {
      const s = n.findIndex((a) => a.value === l.value);
      s !== -1 && n.splice(s, 1);
    },
    async openLastOverlay() {
      var l;
      if (await oe(), n.forEach((s) => s.value.overlayVisible.value = !1), n.length > 0) {
        const s = n[n.length - 1];
        !((l = s.value.hideOverlay) != null && l.value) && (s.value.overlayVisible.value = !0);
      }
    },
    resolvedClosed(l) {
      var s, a;
      (a = (s = t[l]) == null ? void 0 : s.resolveClosed) == null || a.call(s);
    },
    resolvedOpened(l) {
      var s, a;
      (a = (s = t[l]) == null ? void 0 : s.resolveOpened) == null || a.call(s);
    }
  };
  return u;
}
export {
  go as CoreModal,
  No as ModalsContainer,
  Oo as VueFinalModal,
  ue as coreModalProps,
  jo as createVfm,
  Ro as useModal,
  Ho as useModalSlot,
  Re as useVfm,
  Po as useVfmAttrs,
  Co as vueFinalModalProps
};
